geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = -0.1428, linetype="dashed") +
geom_vline(xintercept = 0.5398, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 0.0778, linetype="dashed") +
geom_vline(xintercept = 0.4443, linetype="dashed") +
geom_vline(xintercept = 0.5398, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 0.0778, linetype="dashed") +
geom_vline(xintercept = 0.4443, linetype="dashed") +
geom_vline(xintercept = 0.5398, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 50, linetype="dashed") +
geom_vline(xintercept = 95, linetype="dashed") +
geom_vline(xintercept = 135, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 50, linetype="dashed") +
geom_vline(xintercept = 95, linetype="dashed") +
geom_vline(xintercept = 135, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 50, linetype="dashed") +
geom_vline(xintercept = 95, linetype="dashed") +
geom_vline(xintercept = 135, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = 50, linetype="dashed") +
geom_vline(xintercept = 95, linetype="dashed") +
geom_vline(xintercept = 135, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = qnorm(50), linetype="dashed") +
geom_vline(xintercept = qnorm(95), linetype="dashed") +
geom_vline(xintercept = qnorm(135), linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
?qnorm
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = qnorm(50, mean = 100, sd = 35), linetype="dashed") +
geom_vline(xintercept = qnorm(95, mean = 100, sd = 35), linetype="dashed") +
geom_vline(xintercept = qnorm(135, mean = 100, sd = 35), linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = 0.1428, linetype="dashed") +
geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("Quantitles for normal distribution at 0.5, 0.9, 0.95, 0.99")
?qt
qt(2.33)
qt(2.33, 100)
?qz
qnorm(.99)
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = 0.1428, linetype="dashed") +
geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist), colour="blue") +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist), color="red") +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = 0.1428, linetype="dashed") +
geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
# create a data frame containing values for the density function (sampled at
# each value of xvals) and the cumulative distribution sampled at the same values
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# take a look at the first few rows of the data frame
head(dist_data)
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = 0.1428, linetype="dashed") +
geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Normal Distribution VS)")
library(tidyverse)
library(ggplot2)
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = -1.428, linetype="dashed") +
geom_vline(xintercept = 0.1428, linetype="dashed") +
geom_vline(xintercept = 1, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Cumulative Distribution & Probability Density)")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Cumulative Distribution & Probability Density)")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Standard Normal Distribution)")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 0.01)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Standard Normal Distribution)")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation (Standard Normal Distribution)")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=100, sd=35),
cumulative_dist = pnorm(xvals, mean=0, sd=1))
# plot
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library(tidyverse)
library(ggplot2)
# define the mean, standard deviation, and z values
x_avg <- 100
sd <- 35
z1 <- -1.428
z2 <- 0.1428
z3 <- 1
# create a series of x values
xvals = seq(-50, 250, 1)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=x_avg, sd=sd),
cumulative_dist = pnorm(xvals, mean=x_avg, sd=sd))
# plot
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")+
geom_vline(xintercept = z1, linetype="dashed") +
geom_vline(xintercept = z2, linetype="dashed") +
geom_vline(xintercept = z3, linetype="dashed") +
ggtitle("The distribution of yearly amount of precipitation")
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
df$year <- format(df$date,"%Y")
df$date <- as.POSIXct(df$date)
df$weekstatus <- ifelse(df$weekday %in% c(1,7),"weekend",  "weekdays")
df %>% select(weekstatus,month,O3) %>% group_by(weekstatus,month) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
df$year <- format(df$date,"%Y")
df$date <- as.POSIXct(df$date)
df$weekstatus <- ifelse(df$weekday %in% c(1,7),"weekend",  "weekdays")
rs <- df %>% select(weekstatus,month,O3) %>% group_by(weekstatus,month) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs
View(rs)
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
df$year <- format(df$date,"%Y")
df$date <- as.POSIXct(df$date)
df$weekstatus <- ifelse(df$weekday %in% c(1,7),"weekend",  "weekdays")
rs <- df %>% select(weekstatus,month,O3) %>% group_by(weekstatus,month) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs
rs_entire <- df %>% select(weekstatus,O3) %>% group_by(weekstatus) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs_entire
View(rs_entire)
rm(list = ls())
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
weekdays_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(2:6)) %>% select(O3)
weekends_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(1,7)) %>% select(O3)
count(weekdays_data)
count(weekends_data)
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
df$year <- format(df$date,"%Y")
df$date <- as.POSIXct(df$date)
df$weekstatus <- ifelse(df$weekday %in% c(1,7),"weekend",  "weekdays")
rs <- df %>% select(weekstatus,month,O3) %>% group_by(weekstatus,month) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs
rs_entire <- df %>% select(weekstatus,O3) %>% group_by(weekstatus) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs_entire
View(rs_entire)
rm(list = ls())
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
weekdays_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(2:6)) %>% select(O3)
weekends_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(1,7)) %>% select(O3)
count(weekdays_data)
count(weekends_data)
vector_weekdays <- unlist(weekdays_data['O3'])
vector_weekends <- unlist(weekends_data['O3'])
critical_values <- qf(c(0.025,0.975),2075,5118)
critical_values
var.test(vector_weekdays, vector_weekends, ratio = 1, alternative = "two.sided", conf.level = 0.95)
rm(list = ls())
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
weekdays_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(2:6)) %>% select(O3)
weekends_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(1,7)) %>% select(O3)
count(weekdays_data)
count(weekends_data)
vector_weekdays <- unlist(weekdays_data['O3'])
vector_weekends <- unlist(weekends_data['O3'])
critical_values <- qf(c(0.025,0.975),5118,2075)
critical_values
var.test(vector_weekdays, vector_weekends, ratio = 1, alternative = "two.sided", conf.level = 0.95)
rm(list = ls())
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
weekdays_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(2:6)) %>% select(O3)
weekends_data <- df %>% select(weekday, O3) %>% filter(weekday %in% c(1,7)) %>% select(O3)
count(weekdays_data)
count(weekends_data)
vector_weekdays <- unlist(weekdays_data['O3'])
vector_weekends <- unlist(weekends_data['O3'])
critical_values <- qf(c(0.025,0.975),2075,5118)
critical_values
var.test(vector_weekdays, vector_weekends, ratio = 1, alternative = "two.sided", conf.level = 0.95)
library("dplyr")
setwd("~/Desktop/Kuliah/Semester 3/Data Analysis and Statistical Methods/Assignments/Assignment1")
df <- read.csv("data1(2).csv", header = TRUE)
df[, "date"] = lapply(df["date"],function(x){strptime(x, "%d/%m/%y")})
df$year <- format(df$date,"%Y")
df$date <- as.POSIXct(df$date)
df$weekstatus <- ifelse(df$weekday %in% c(1,7),"weekend",  "weekdays")
rs <- df %>% select(weekstatus,month,O3) %>% group_by(weekstatus,month) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs
rs_entire <- df %>% select(weekstatus,O3) %>% group_by(weekstatus) %>% summarise(avg_O3= mean(O3), sd_O3= sd(O3))
rs_entire
View(rs_entire)
