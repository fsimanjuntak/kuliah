xvals = seq(-3, 3, 0.01)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=0, sd=1),
cumulative_dist = pnorm(xvals, mean=0, sd=1))
xvals = seq(-3, 3, 0.01)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=0.5002, sd=0.0100),
cumulative_dist = pnorm(xvals, mean=0.5002, sd=0.0100))
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")
library(ggplot2)
xvals = seq(-3, 3, 0.01)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=0.5002, sd=0.0100),
cumulative_dist = pnorm(xvals, mean=0.5002, sd=0.0100))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")
library(tidyverse)
library(ggplot2)
xvals = seq(0.1, 0.8, 0.01)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=0.5002, sd=0.0100),
cumulative_dist = pnorm(xvals, mean=0.5002, sd=0.0100))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")
library(tidyverse)
library(ggplot2)
xvals = seq(0.1, 0.8, 0.001)
dist_data = data.frame(x=xvals,
dist = dnorm(xvals, mean=0.5002, sd=0.0100),
cumulative_dist = pnorm(xvals, mean=0.5002, sd=0.0100))
# plot probability vs. cumulative probability
ggplot() +
geom_line(data=dist_data, aes(x=x, y=dist, color="probability density")) +
geom_line(data=dist_data, aes(x=x, y=cumulative_dist, color="cumulative distribution")) +
ylab("Probability") +
xlab("X Values")
0.0005 - pnorm(x0, lower.tail=TRUE)
x0= 0.0005
pnorm(x0, lower.tail=FALSE)
1 - pnorm(x0, lower.tail=TRUE)
falseacceptanceerror= 0.0005
significantlevel = 1 - falseacceptanceerror
pnorm(significantlevel, lower.tail=FALSE)
1 - pnorm(significantlevel, lower.tail=TRUE)
qnorm(significantlevel, mean=0.5002, sd=0.0100)
qnorm(falseacceptanceerror, mean=0.5002, sd=0.0100)
1 - pnorm(significantlevel, mean=0.5002, sd=sqrt(0.0100))
1 - pnorm(falseacceptanceerror, mean=0.5002, sd=sqrt(0.0100))
qnorm(significantlevel, mean=0.5002, sd=sqrt(0.0100))
pnorm(0.0005, lower.tail=FALSE)
qnorm(1 - falseacceptanceerror,mean=0.5002, sd=sqrt(0.0100))
qnorm(falseacceptanceerror,mean=0.5002, sd=sqrt(0.0100))
#given false probability acceptance error = 0.0005, determine the value of d
#normal distributin, z= (d - m0)/sqrt(sd2)
d = qnorm(falseacceptanceerror,mean=0.5002, sd=sqrt(0.0100))
#obtain the value of false rejection rate
1 - pnorm(d, mean=0.5002, sd=sqrt(0.0100))
pnorm(d, mean=0.5002, sd=sqrt(0.0100))
1 - pnorm(d, mean=0.5002, sd=0.0100)
d = qnorm(falseacceptanceerror,mean=0.5002, sd=sqrt(0.0100))
pnorm(d, mean=0.5002, sd=sqrt(0.0100))
pnorm(d, mean=0.5002, sd=sqrt(0.0100))
1-pnorm(d, mean=0.5002, sd=sqrt(0.0100))
dnorm(d, mean=0.5002, sd=sqrt(0.0100))
1-pnorm(0.0005, lower.tail=FALSE)
m1 = c(1,2)
m2 = c(3,4)
M <- cbind(m1,m2)
M
cov(M)
m1 = c(10,2)
m2 = c(3,4)
M <- cbind(m1,m2)
cov(M)
m1 = c(10,2)
m2 = c(3,4)
M <- cbind(m1,m2)
cov(M)
m2 = c(2,7)
m1 = c(1,6)
m2 = c(2,7)
M <- cbind(m1,m2)
cov(M)
m1 = c(1,6)
m2 = c(12,4)
M <- cbind(m1,m2)
cov(M)
M
var(m1)
var(m2)
cov(m1,m2)
cov(M)
M <- cbind(@*m1,2*m2)
M <- cbind(2*m1,2*m2)
cov(M)
m1 = c(1,6)
m2 = c(12,4)
M <- cbind(m1,m2)
cov(M)
k=1
m1 = c(1+1,6+1)
m2 = c(12+1,4+1)
M <- cbind(m1,m2)
cov(M)
k=1
m1 = c(1*k,6*k)
m2 = c(12*k,4*k)
M <- cbind(m1,m2)
cov(M)
k=2
m1 = c(1*k,6*k)
m2 = c(12*k,4*k)
M <- cbind(m1,m2)
cov(M)
k=3
m1 = c(1*k,6*k)
m2 = c(12*k,4*k)
M <- cbind(m1,m2)
cov(M)
k=1
m1 = c(1*k,6*k)
m2 = c(12*k,4*k)
M <- cbind(m1,m2)
cov(M)
k=5
m1 = c(1+k,6+k)
m2 = c(12+k,4+k)
M <- cbind(m1,m2)
cov(M)
